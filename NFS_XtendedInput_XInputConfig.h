#pragma once

int bStringHash(char* a1);

//
// Constants for gamepad buttons -- from XInput.h
//
#define XINPUT_GAMEPAD_DPAD_UP          0x0001
#define XINPUT_GAMEPAD_DPAD_DOWN        0x0002
#define XINPUT_GAMEPAD_DPAD_LEFT        0x0004
#define XINPUT_GAMEPAD_DPAD_RIGHT       0x0008
#define XINPUT_GAMEPAD_START            0x0010
#define XINPUT_GAMEPAD_BACK             0x0020
#define XINPUT_GAMEPAD_LEFT_THUMB       0x0040
#define XINPUT_GAMEPAD_RIGHT_THUMB      0x0080
#define XINPUT_GAMEPAD_LEFT_SHOULDER    0x0100
#define XINPUT_GAMEPAD_RIGHT_SHOULDER   0x0200
#define XINPUT_GAMEPAD_A                0x1000
#define XINPUT_GAMEPAD_B                0x2000
#define XINPUT_GAMEPAD_X                0x4000
#define XINPUT_GAMEPAD_Y                0x8000

// other gamepad stuff -- sticks & triggers
#define XINPUT_GAMEPAD_LT_CONFIGDEF			0xABC0
#define XINPUT_GAMEPAD_RT_CONFIGDEF			0xABC1
#define XINPUT_GAMEPAD_LS_X_CONFIGDEF		0xABC2
#define XINPUT_GAMEPAD_LS_Y_CONFIGDEF		0xABC3
#define XINPUT_GAMEPAD_RS_X_CONFIGDEF		0xABC4
#define XINPUT_GAMEPAD_RS_Y_CONFIGDEF		0xABC5
#define XINPUT_GAMEPAD_LS_UP_CONFIGDEF		0xABC7
#define XINPUT_GAMEPAD_LS_DOWN_CONFIGDEF	0xABC8
#define XINPUT_GAMEPAD_LS_LEFT_CONFIGDEF	0xABC9
#define XINPUT_GAMEPAD_LS_RIGHT_CONFIGDEF	0xABCA
#define XINPUT_GAMEPAD_RS_UP_CONFIGDEF		0xABCB
#define XINPUT_GAMEPAD_RS_DOWN_CONFIGDEF	0xABCC
#define XINPUT_GAMEPAD_RS_LEFT_CONFIGDEF	0xABCD
#define XINPUT_GAMEPAD_RS_RIGHT_CONFIGDEF	0xABCE

#define XINPUT_GAMEPAD_DPAD_CONFIGDEF		0xDAD0 // only for internal use
#define XINPUT_GAMEPAD_LS_CONFIGDEF			0xDAD1 // only for internal use
#define XINPUT_GAMEPAD_RS_CONFIGDEF			0xDAD2 // only for internal use

#define XINPUT_GAMEPAD_DPAD_UPDOWN_CONFIGDEF		0xDAD3 // only for internal use
#define XINPUT_GAMEPAD_DPAD_LEFTRIGHT_CONFIGDEF		0xDAD4 // only for internal use


// comparing strings by hash
#define XINPUT_GAMEPAD_DPAD_UP_HASH         HASH("XINPUT_GAMEPAD_DPAD_UP")          
#define XINPUT_GAMEPAD_DPAD_DOWN_HASH       HASH("XINPUT_GAMEPAD_DPAD_DOWN")        
#define XINPUT_GAMEPAD_DPAD_LEFT_HASH       HASH("XINPUT_GAMEPAD_DPAD_LEFT")        
#define XINPUT_GAMEPAD_DPAD_RIGHT_HASH      HASH("XINPUT_GAMEPAD_DPAD_RIGHT")       
#define XINPUT_GAMEPAD_START_HASH           HASH("XINPUT_GAMEPAD_START")            
#define XINPUT_GAMEPAD_BACK_HASH            HASH("XINPUT_GAMEPAD_BACK")             
#define XINPUT_GAMEPAD_LEFT_THUMB_HASH      HASH("XINPUT_GAMEPAD_LEFT_THUMB")     
#define XINPUT_GAMEPAD_RIGHT_THUMB_HASH     HASH("XINPUT_GAMEPAD_RIGHT_THUMB")      
#define XINPUT_GAMEPAD_LEFT_SHOULDER_HASH   HASH("XINPUT_GAMEPAD_LEFT_SHOULDER")   
#define XINPUT_GAMEPAD_RIGHT_SHOULDER_HASH  HASH("XINPUT_GAMEPAD_RIGHT_SHOULDER")   
#define XINPUT_GAMEPAD_A_HASH               HASH("XINPUT_GAMEPAD_A")                
#define XINPUT_GAMEPAD_B_HASH               HASH("XINPUT_GAMEPAD_B")                
#define XINPUT_GAMEPAD_X_HASH               HASH("XINPUT_GAMEPAD_X")                
#define XINPUT_GAMEPAD_Y_HASH               HASH("XINPUT_GAMEPAD_Y")             
#define XINPUT_GAMEPAD_LT_HASH              HASH("XINPUT_GAMEPAD_LT")        
#define XINPUT_GAMEPAD_RT_HASH              HASH("XINPUT_GAMEPAD_RT")             
#define XINPUT_GAMEPAD_LS_X_HASH            HASH("XINPUT_GAMEPAD_LS_X")           
#define XINPUT_GAMEPAD_LS_Y_HASH            HASH("XINPUT_GAMEPAD_LS_Y")          
#define XINPUT_GAMEPAD_RS_X_HASH            HASH("XINPUT_GAMEPAD_RS_X")        
#define XINPUT_GAMEPAD_RS_Y_HASH            HASH("XINPUT_GAMEPAD_RS_Y")         
#define XINPUT_GAMEPAD_DPAD_HASH            HASH("XINPUT_GAMEPAD_DPAD")        
#define XINPUT_GAMEPAD_LS_UP_HASH			HASH("XINPUT_GAMEPAD_LS_UP")		
#define XINPUT_GAMEPAD_LS_DOWN_HASH			HASH("XINPUT_GAMEPAD_LS_DOWN")		
#define XINPUT_GAMEPAD_LS_LEFT_HASH			HASH("XINPUT_GAMEPAD_LS_LEFT")		
#define XINPUT_GAMEPAD_LS_RIGHT_HASH		HASH("XINPUT_GAMEPAD_LS_RIGHT")	
#define XINPUT_GAMEPAD_RS_UP_HASH			HASH("XINPUT_GAMEPAD_RS_UP")
#define XINPUT_GAMEPAD_RS_DOWN_HASH			HASH("XINPUT_GAMEPAD_RS_DOWN")	
#define XINPUT_GAMEPAD_RS_LEFT_HASH			HASH("XINPUT_GAMEPAD_RS_LEFT")
#define XINPUT_GAMEPAD_RS_RIGHT_HASH		HASH("XINPUT_GAMEPAD_RS_RIGHT")	


WORD ConvertXInputNameToBitmask(char* InName)
{
	for (int i = 0; i < strlen(InName); ++i)
		InName[i] = toupper(InName[i]);

	switch (bStringHash(InName))
	{
	case XINPUT_GAMEPAD_DPAD_UP_HASH:
		return XINPUT_GAMEPAD_DPAD_UP;
	case XINPUT_GAMEPAD_DPAD_DOWN_HASH:
		return XINPUT_GAMEPAD_DPAD_DOWN;
	case XINPUT_GAMEPAD_DPAD_LEFT_HASH:
		return XINPUT_GAMEPAD_DPAD_LEFT;
	case XINPUT_GAMEPAD_DPAD_RIGHT_HASH:
		return XINPUT_GAMEPAD_DPAD_RIGHT;
	case XINPUT_GAMEPAD_START_HASH:
		return XINPUT_GAMEPAD_START;
	case XINPUT_GAMEPAD_BACK_HASH:
		return XINPUT_GAMEPAD_BACK;
	case XINPUT_GAMEPAD_LEFT_THUMB_HASH:
		return XINPUT_GAMEPAD_LEFT_THUMB;
	case XINPUT_GAMEPAD_RIGHT_THUMB_HASH:
		return XINPUT_GAMEPAD_RIGHT_THUMB;
	case XINPUT_GAMEPAD_LEFT_SHOULDER_HASH:
		return XINPUT_GAMEPAD_LEFT_SHOULDER;
	case XINPUT_GAMEPAD_RIGHT_SHOULDER_HASH:
		return XINPUT_GAMEPAD_RIGHT_SHOULDER;
	case XINPUT_GAMEPAD_A_HASH:
		return XINPUT_GAMEPAD_A;
	case XINPUT_GAMEPAD_B_HASH:
		return XINPUT_GAMEPAD_B;
	case XINPUT_GAMEPAD_X_HASH:
		return XINPUT_GAMEPAD_X;
	case XINPUT_GAMEPAD_Y_HASH:
		return XINPUT_GAMEPAD_Y;

	default:
		break;
	}
	return 0;
}

int ConvertXInputOtherConfigDef(char* InName)
{
	for (int i = 0; i < strlen(InName); ++i)
		InName[i] = toupper(InName[i]);

	switch (bStringHash(InName))
	{
		case XINPUT_GAMEPAD_LT_HASH:
			return XINPUT_GAMEPAD_LT_CONFIGDEF;
		case XINPUT_GAMEPAD_RT_HASH:
			return XINPUT_GAMEPAD_RT_CONFIGDEF;
		case XINPUT_GAMEPAD_LS_X_HASH:
			return XINPUT_GAMEPAD_LS_X_CONFIGDEF;
		case XINPUT_GAMEPAD_LS_Y_HASH:
			return XINPUT_GAMEPAD_LS_Y_CONFIGDEF;
		case XINPUT_GAMEPAD_RS_X_HASH:
			return XINPUT_GAMEPAD_RS_X_CONFIGDEF;
		case XINPUT_GAMEPAD_RS_Y_HASH:
			return XINPUT_GAMEPAD_RS_Y_CONFIGDEF;
		case XINPUT_GAMEPAD_LS_UP_HASH:
			return XINPUT_GAMEPAD_LS_UP_CONFIGDEF;
		case XINPUT_GAMEPAD_LS_DOWN_HASH:
			return XINPUT_GAMEPAD_LS_DOWN_CONFIGDEF;
		case XINPUT_GAMEPAD_LS_LEFT_HASH:
			return XINPUT_GAMEPAD_LS_LEFT_CONFIGDEF;
		case XINPUT_GAMEPAD_LS_RIGHT_HASH:
			return XINPUT_GAMEPAD_LS_RIGHT_CONFIGDEF;
		case XINPUT_GAMEPAD_RS_UP_HASH:
			return XINPUT_GAMEPAD_RS_UP_CONFIGDEF;
		case XINPUT_GAMEPAD_RS_DOWN_HASH:
			return XINPUT_GAMEPAD_RS_DOWN_CONFIGDEF;
		case XINPUT_GAMEPAD_RS_LEFT_HASH:
			return XINPUT_GAMEPAD_RS_LEFT_CONFIGDEF;
		case XINPUT_GAMEPAD_RS_RIGHT_HASH:
			return XINPUT_GAMEPAD_RS_RIGHT_CONFIGDEF;
	}
	return 0;
}

bool bIsBindingAnalog(WORD in)
{
	if (((in >> 4) & 0xFFF) == 0xABC)
		return true;
	return false;
}

int IsBindingNavigation(WORD in)
{
	switch (in)
	{
	case XINPUT_GAMEPAD_DPAD_UP:
	case XINPUT_GAMEPAD_DPAD_DOWN:
	case XINPUT_GAMEPAD_DPAD_LEFT:
	case XINPUT_GAMEPAD_DPAD_RIGHT:
		return 1;
	case XINPUT_GAMEPAD_LS_X_CONFIGDEF:
	case XINPUT_GAMEPAD_LS_Y_CONFIGDEF:
	case XINPUT_GAMEPAD_LS_UP_CONFIGDEF:
	case XINPUT_GAMEPAD_LS_DOWN_CONFIGDEF:
	case XINPUT_GAMEPAD_LS_LEFT_CONFIGDEF:
	case XINPUT_GAMEPAD_LS_RIGHT_CONFIGDEF:
		return 2;
	case XINPUT_GAMEPAD_RS_X_CONFIGDEF:
	case XINPUT_GAMEPAD_RS_Y_CONFIGDEF:
	case XINPUT_GAMEPAD_RS_UP_CONFIGDEF:
	case XINPUT_GAMEPAD_RS_DOWN_CONFIGDEF:
	case XINPUT_GAMEPAD_RS_LEFT_CONFIGDEF:
	case XINPUT_GAMEPAD_RS_RIGHT_CONFIGDEF:
		return 3;

	default:
		break;
	}

	return 0;
}

