#pragma once
#include "NFS_XtendedInput.h"
#include "NFS_XtendedInput_XInputConfig.h"

#define XBONE_A_HASH				NFS_HASH("XBONE_A")				
#define XBONE_B_HASH				NFS_HASH("XBONE_B")				
#define XBONE_DPAD_HASH				NFS_HASH("XBONE_DPAD")				
#define XBONE_DPAD_DOWN_HASH		NFS_HASH("XBONE_DPAD_DOWN")		
#define XBONE_DPAD_LEFT_HASH		NFS_HASH("XBONE_DPAD_LEFT")		
#define XBONE_DPAD_RIGHT_HASH		NFS_HASH("XBONE_DPAD_RIGHT")		
#define XBONE_DPAD_UP_HASH			NFS_HASH("XBONE_DPAD_UP")			
#define XBONE_DPAD_X_HASH			NFS_HASH("XBONE_DPAD_X")			
#define XBONE_DPAD_Y_HASH			NFS_HASH("XBONE_DPAD_Y")			
#define XBONE_LANALOG_HASH			NFS_HASH("XBONE_LANALOG")			
#define XBONE_LANALOG_DOWN_HASH		NFS_HASH("XBONE_LANALOG_DOWN")		
#define XBONE_LANALOG_LEFT_HASH		NFS_HASH("XBONE_LANALOG_LEFT")		
#define XBONE_LANALOG_RIGHT_HASH	NFS_HASH("XBONE_LANALOG_RIGHT")	
#define XBONE_LANALOG_UP_HASH		NFS_HASH("XBONE_LANALOG_UP")		
#define XBONE_LANALOG_X_HASH		NFS_HASH("XBONE_LANALOG_X")		
#define XBONE_LANALOG_Y_HASH		NFS_HASH("XBONE_LANALOG_Y")		
#define XBONE_LB_HASH				NFS_HASH("XBONE_LB")				
#define XBONE_LS_HASH				NFS_HASH("XBONE_LS")				
#define XBONE_LT_HASH				NFS_HASH("XBONE_LT")				
#define XBONE_MENU_HASH				NFS_HASH("XBONE_MENU")				
#define XBONE_RANALOG_HASH			NFS_HASH("XBONE_RANALOG")			
#define XBONE_RANALOG_DOWN_HASH		NFS_HASH("XBONE_RANALOG_DOWN")		
#define XBONE_RANALOG_LEFT_HASH		NFS_HASH("XBONE_RANALOG_LEFT")		
#define XBONE_RANALOG_RIGHT_HASH	NFS_HASH("XBONE_RANALOG_RIGHT")	
#define XBONE_RANALOG_UP_HASH		NFS_HASH("XBONE_RANALOG_UP")		
#define XBONE_RANALOG_X_HASH		NFS_HASH("XBONE_RANALOG_X")		
#define XBONE_RANALOG_Y_HASH		NFS_HASH("XBONE_RANALOG_Y")		
#define XBONE_RB_HASH				NFS_HASH("XBONE_RB")				
#define XBONE_RS_HASH				NFS_HASH("XBONE_RS")				
#define XBONE_RT_HASH				NFS_HASH("XBONE_RT")				
#define XBONE_VIEW_HASH				NFS_HASH("XBONE_VIEW")				
#define XBONE_X_HASH				NFS_HASH("XBONE_X")				
#define XBONE_Y_HASH				NFS_HASH("XBONE_Y")				

#define PS4_CIRCLE_HASH				NFS_HASH("PS4_CIRCLE")			
#define PS4_CROSS_HASH				NFS_HASH("PS4_CROSS")			
#define PS4_DPAD_HASH				NFS_HASH("PS4_DPAD")			
#define PS4_DPAD_DOWN_HASH			NFS_HASH("PS4_DPAD_DOWN")		
#define PS4_DPAD_LEFT_HASH			NFS_HASH("PS4_DPAD_LEFT")		
#define PS4_DPAD_RIGHT_HASH			NFS_HASH("PS4_DPAD_RIGHT")		
#define PS4_DPAD_UP_HASH			NFS_HASH("PS4_DPAD_UP")		
#define PS4_DPAD_X_HASH				NFS_HASH("PS4_DPAD_X")			
#define PS4_DPAD_Y_HASH				NFS_HASH("PS4_DPAD_Y")			
#define PS4_L1_HASH					NFS_HASH("PS4_L1")				
#define PS4_L2_HASH					NFS_HASH("PS4_L2")				
#define PS4_L3_HASH					NFS_HASH("PS4_L3")				
#define PS4_LANALOG_HASH			NFS_HASH("PS4_LANALOG")		
#define PS4_LANALOG_DOWN_HASH		NFS_HASH("PS4_LANALOG_DOWN")	
#define PS4_LANALOG_LEFT_HASH		NFS_HASH("PS4_LANALOG_LEFT")	
#define PS4_LANALOG_RIGHT_HASH		NFS_HASH("PS4_LANALOG_RIGHT")	
#define PS4_LANALOG_UP_HASH			NFS_HASH("PS4_LANALOG_UP")		
#define PS4_LANALOG_X_HASH			NFS_HASH("PS4_LANALOG_X")		
#define PS4_LANALOG_Y_HASH			NFS_HASH("PS4_LANALOG_Y")		
#define PS4_R1_HASH					NFS_HASH("PS4_R1")				
#define PS4_R2_HASH					NFS_HASH("PS4_R2")				
#define PS4_R3_HASH					NFS_HASH("PS4_R3")				
#define PS4_RANALOG_HASH			NFS_HASH("PS4_RANALOG")		
#define PS4_RANALOG_DOWN_HASH		NFS_HASH("PS4_RANALOG_DOWN")	
#define PS4_RANALOG_LEFT_HASH		NFS_HASH("PS4_RANALOG_LEFT")	
#define PS4_RANALOG_RIGHT_HASH		NFS_HASH("PS4_RANALOG_RIGHT")	
#define PS4_RANALOG_UP_HASH			NFS_HASH("PS4_RANALOG_UP")		
#define PS4_RANALOG_X_HASH			NFS_HASH("PS4_RANALOG_X")		
#define PS4_RANALOG_Y_HASH			NFS_HASH("PS4_RANALOG_Y")		
#define PS4_SHARE_HASH				NFS_HASH("PS4_SHARE")			
#define PS4_SQUARE_HASH				NFS_HASH("PS4_SQUARE")			
#define PS4_START_HASH				NFS_HASH("PS4_START")			
#define PS4_TRIANGLE_HASH			NFS_HASH("PS4_TRIANGLE")		


unsigned int GetAppropriateButtonTex(WORD buttonmask)
{
	switch (ControllerIconMode)
	{
	case CONTROLLERICON_PS4:
		switch (buttonmask)
		{
		case XINPUT_GAMEPAD_DPAD_UP:
			return PS4_DPAD_UP_HASH;
		case XINPUT_GAMEPAD_DPAD_DOWN:
			return PS4_DPAD_DOWN_HASH;
		case XINPUT_GAMEPAD_DPAD_LEFT:
			return PS4_DPAD_LEFT_HASH;
		case XINPUT_GAMEPAD_DPAD_RIGHT:
			return PS4_DPAD_RIGHT_HASH;
		case XINPUT_GAMEPAD_START:
			return PS4_START_HASH;
		case XINPUT_GAMEPAD_BACK:
			return PS4_SHARE_HASH;
		case XINPUT_GAMEPAD_LEFT_THUMB:
			return PS4_L3_HASH;
		case XINPUT_GAMEPAD_RIGHT_THUMB:
			return PS4_R3_HASH;
		case XINPUT_GAMEPAD_LEFT_SHOULDER:
			return PS4_L1_HASH;
		case XINPUT_GAMEPAD_RIGHT_SHOULDER:
			return PS4_R1_HASH;
		case XINPUT_GAMEPAD_A:
			return PS4_CROSS_HASH;
		case XINPUT_GAMEPAD_B:
			return PS4_CIRCLE_HASH;
		case XINPUT_GAMEPAD_X:
			return PS4_SQUARE_HASH;
		case XINPUT_GAMEPAD_Y:
			return PS4_TRIANGLE_HASH;
		case XINPUT_GAMEPAD_LT_CONFIGDEF:
			return PS4_L2_HASH;
		case XINPUT_GAMEPAD_RT_CONFIGDEF:
			return PS4_R2_HASH;
		case XINPUT_GAMEPAD_LS_X_CONFIGDEF:
			return PS4_LANALOG_X_HASH;
		case XINPUT_GAMEPAD_LS_Y_CONFIGDEF:
			return PS4_LANALOG_Y_HASH;
		case XINPUT_GAMEPAD_RS_X_CONFIGDEF:
			return PS4_RANALOG_X_HASH;
		case XINPUT_GAMEPAD_RS_Y_CONFIGDEF:
			return PS4_RANALOG_Y_HASH;
		case XINPUT_GAMEPAD_LS_UP_CONFIGDEF:
			return PS4_LANALOG_UP_HASH;
		case XINPUT_GAMEPAD_LS_DOWN_CONFIGDEF:
			return PS4_LANALOG_DOWN_HASH;
		case XINPUT_GAMEPAD_LS_LEFT_CONFIGDEF:
			return PS4_LANALOG_LEFT_HASH;
		case XINPUT_GAMEPAD_LS_RIGHT_CONFIGDEF:
			return PS4_LANALOG_RIGHT_HASH;
		case XINPUT_GAMEPAD_RS_UP_CONFIGDEF:
			return PS4_RANALOG_UP_HASH;
		case XINPUT_GAMEPAD_RS_DOWN_CONFIGDEF:
			return PS4_RANALOG_DOWN_HASH;
		case XINPUT_GAMEPAD_RS_LEFT_CONFIGDEF:
			return PS4_RANALOG_LEFT_HASH;
		case XINPUT_GAMEPAD_RS_RIGHT_CONFIGDEF:
			return PS4_RANALOG_RIGHT_HASH;
		case XINPUT_GAMEPAD_DPAD_CONFIGDEF:
			return PS4_DPAD_HASH;
		case XINPUT_GAMEPAD_DPAD_UPDOWN_CONFIGDEF:
			return PS4_DPAD_Y_HASH;
		case XINPUT_GAMEPAD_DPAD_LEFTRIGHT_CONFIGDEF:
			return PS4_DPAD_X_HASH;
		case XINPUT_GAMEPAD_LS_CONFIGDEF:
			return PS4_LANALOG_HASH;
		case XINPUT_GAMEPAD_RS_CONFIGDEF:
			return PS4_RANALOG_HASH;

		default:
			break;
		}
	case CONTROLLERICON_XBOXONE:
	default:
		switch (buttonmask)
		{
		case XINPUT_GAMEPAD_DPAD_UP:
			return XBONE_DPAD_UP_HASH;
		case XINPUT_GAMEPAD_DPAD_DOWN:
			return XBONE_DPAD_DOWN_HASH;
		case XINPUT_GAMEPAD_DPAD_LEFT:
			return XBONE_DPAD_LEFT_HASH;
		case XINPUT_GAMEPAD_DPAD_RIGHT:
			return XBONE_DPAD_RIGHT_HASH;
		case XINPUT_GAMEPAD_START:
			return XBONE_MENU_HASH;
		case XINPUT_GAMEPAD_BACK:
			return XBONE_VIEW_HASH;
		case XINPUT_GAMEPAD_LEFT_THUMB:
			return XBONE_LS_HASH;
		case XINPUT_GAMEPAD_RIGHT_THUMB:
			return XBONE_RS_HASH;
		case XINPUT_GAMEPAD_LEFT_SHOULDER:
			return XBONE_LB_HASH;
		case XINPUT_GAMEPAD_RIGHT_SHOULDER:
			return XBONE_RB_HASH;
		case XINPUT_GAMEPAD_A:
			return XBONE_A_HASH;
		case XINPUT_GAMEPAD_B:
			return XBONE_B_HASH;
		case XINPUT_GAMEPAD_X:
			return XBONE_X_HASH;
		case XINPUT_GAMEPAD_Y:
			return XBONE_Y_HASH;
		case XINPUT_GAMEPAD_LT_CONFIGDEF:
			return XBONE_LT_HASH;
		case XINPUT_GAMEPAD_RT_CONFIGDEF:
			return XBONE_RT_HASH;
		case XINPUT_GAMEPAD_LS_X_CONFIGDEF:
			return XBONE_LANALOG_X_HASH;
		case XINPUT_GAMEPAD_LS_Y_CONFIGDEF:
			return XBONE_LANALOG_Y_HASH;
		case XINPUT_GAMEPAD_RS_X_CONFIGDEF:
			return XBONE_RANALOG_X_HASH;
		case XINPUT_GAMEPAD_RS_Y_CONFIGDEF:
			return XBONE_RANALOG_Y_HASH;
		case XINPUT_GAMEPAD_LS_UP_CONFIGDEF:
			return XBONE_LANALOG_UP_HASH;
		case XINPUT_GAMEPAD_LS_DOWN_CONFIGDEF:
			return XBONE_LANALOG_DOWN_HASH;
		case XINPUT_GAMEPAD_LS_LEFT_CONFIGDEF:
			return XBONE_LANALOG_LEFT_HASH;
		case XINPUT_GAMEPAD_LS_RIGHT_CONFIGDEF:
			return XBONE_LANALOG_RIGHT_HASH;
		case XINPUT_GAMEPAD_RS_UP_CONFIGDEF:
			return XBONE_RANALOG_UP_HASH;
		case XINPUT_GAMEPAD_RS_DOWN_CONFIGDEF:
			return XBONE_RANALOG_DOWN_HASH;
		case XINPUT_GAMEPAD_RS_LEFT_CONFIGDEF:
			return XBONE_RANALOG_LEFT_HASH;
		case XINPUT_GAMEPAD_RS_RIGHT_CONFIGDEF:
			return XBONE_RANALOG_RIGHT_HASH;
		case XINPUT_GAMEPAD_DPAD_CONFIGDEF:
			return XBONE_DPAD_HASH;
		case XINPUT_GAMEPAD_DPAD_UPDOWN_CONFIGDEF:
			return XBONE_DPAD_Y_HASH;
		case XINPUT_GAMEPAD_DPAD_LEFTRIGHT_CONFIGDEF:
			return XBONE_DPAD_X_HASH;
		case XINPUT_GAMEPAD_LS_CONFIGDEF:
			return XBONE_LANALOG_HASH;
		case XINPUT_GAMEPAD_RS_CONFIGDEF:
			return XBONE_RANALOG_HASH;

		default:
			break;
		}
		break;
	}
	return 0;
}
